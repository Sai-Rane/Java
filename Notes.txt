Features of JAVA:
Java is an interpreted language
Multi-threaded - A thread is like a separate program, executing concurrently. We can write Java programs that deal with many tasks at once by defining multiple threads. The main advantage of multi-threading is that it doesn't occupy memory for each thread. It shares a common memory area.

Java code is compiled by the compiler and converted into bytecode. This bytecode is a platform-independent code because it can be run on multiple platforms, i.e., Write Once and Run Anywhere (WORA).

Architecture-neutral
In C programming, int data type occupies 2 bytes of memory for 32-bit architecture and 4 bytes of memory for 64-bit architecture. However, it occupies 4 bytes of memory for both 32 and 64-bit architectures in Java.

Classloader: It is the subsystem of JVM that is used to load class files.

Java uses Unicode system not ASCII code system.

---------------------------------------------------------------------------------------------------------------

- class keyword is used to declare a class in Java.
- public keyword is an access modifier that represents visibility. It means it is visible to all.
- static is a keyword. If we declare any method as static, it is known as the static method. The core advantage of the static method is that there is no need to create an object to invoke the static method. The main() method is executed by the JVM, so it doesn't require creating an object to invoke the main() method. So, it saves memory.
- void is the return type of the method. It means it doesn't return any value.
- main represents the starting point of the program.

---------------------------------------------------------------------------------------------------------------

Let's see the different codes to write the main method.

public static void main(String[] args)  
public static void main(String []args)  
public static void main(String args[])  
https://www.javatpoint.com/internal-details-of-hello-java-program

---------------------------------------------------------------------------------------------------------------

JVM  provides a runtime environment in which Java bytecode can be executed. It can also run those programs which are written in other languages and compiled to Java bytecode.JVM, JRE, and JDK are platform dependent because the configuration of each OS is different from each other. However, Java is platform independent. 

---------------------------------------------------------------------------------------------------------------

Heap is the runtime data area in which objects are allocated.

Stack - Java Stack stores frames. It holds local variables and partial results, and plays a part in method invocation and return.
Each thread has a private JVM stack, created at the same time as thread.
A new frame is created each time a method is invoked. A frame is destroyed when its method invocation completes.

---------------------------------------------------------------------------------------------------------------

Java Variables
A variable is a container which holds the value while the Java program is executed. A variable is assigned with a data type.
Variable is a name of memory location. There are three types of variables in java: local, instance and static.
There are two types of data types in Java: primitive and non-primitive.

Local Variable is declared inside the body of the method. You can use this variable only within that method and the other methods in the class aren't even aware that the variable exists.
A local variable cannot be defined with "static" keyword.

Instance Variable is declared inside the class but outside the body of the method, is called an instance variable. It is not declared as static.

Static variable
A variable that is declared as static is called a static variable. It cannot be local. You can create a single copy of the static variable and share it among all the instances of the class. Memory allocation for static variables happens only once when the class is loaded in the memory.

Example:
public class A  
{  
    static int m=100; //static variable  
    void method()  
    {    
        int n=90; //local variable    
    }  
    public static void main(String args[])  
    {  
        int data=50; //instance variable    
    }  
}

---------------------------------------------------------------------------------------------------------------

Java Variable Example: Widening

public class Simple{  
public static void main(String[] args){  
int a=10;  
float f=a;  
System.out.println(a);  
System.out.println(f);  
}}  

Output:
10
10.0
---------------------------------------------------------------------------------------------------------------

Data types specify the different sizes and values that can be stored in the variable. There are two types of data types in Java:

Primitive data types: The primitive data types include boolean, char, byte, short, int, long, float and double.
Non-primitive data types: The non-primitive data types include Classes, Interfaces,String and Arrays.